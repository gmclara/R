---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

#### PREGUNTA 1 (0.5pt)

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
# Número de filas
nrow(df_seeds)

# Número de columnas
ncol(df_seeds)

```

#### PREGUNTA 2 (0.5pt)

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}
df_seeds$tipo <- factor(df_seeds$tipo, levels = c(1, 2, 3), labels = c("Kama", "Rosa", "Canadian"))
```

#### PREGUNTA 3 (1pt)

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
df_seeds %>%
  group_by(tipo) %>%
  summarize(media_area = mean(area))
```

#### PREGUNTA 4 (0.5pt)

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**: Este gráfico es de tipo boxplot o diagrama de caja y bigotes. Y la línea central representa la mediana de los datos.

#### PREGUNTA 5 (1.5pt)

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X a variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
ggplot(df_seeds, aes(x = compacto, y = area, color = tipo)) + 
  geom_point()+ggtitle("Comparación de ambas")
```

#### PREGUNTA 6 (0.5pt)

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
```

**Respuesta**: La línea añade una columna nueva bajo el nombre 'is_kama' al dataframe 'df_seeds'. Y su función es indicar si las filas del dataframe son el tipo de semilla Kama o no. En el caso que sea igual a Kama, el valor será TRUE, y sino, será FALSE

#### PREGUNTA 7 (1.5pt)

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
```

**Respuesta**: Es recomendable dividirlo por varios motivos claves:

-   la evaluación del rendimiento del modelo: gracias a la división podemos evaluar cómo se desarrolla el modelo con datos nuevos, teniendo así una aproximación de su capacidad predictiva.

-   Prevenir el sobreajuste: al dividir los datos se podrá detectar y prevenir el sobreajuste del modelo. Para así asegurar que no memorice los datos del entrenamiento sin generalizar de forma adecuada.

-   Validar la hipotesis: gracias a la división se facilita la validación de hipótesis sobre el modelo y los datos. Esto permite el ajuste y las mejoras basadas en la evaluación del rendimiento en datos independientes

**set.seed(123)** y **sample** hacen que la división sea reproducible y aleatoria. A la vez que aseguran la consistencia y la imparcialidad en la selección de los conjuntos de entrenamiento y prueba.

#### PREGUNTA 8 (1pt)

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**: Se podría usar la regresión logística.

#### PREGUNTA 9 (1pt)

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
modelo <- glm(df_seeds_train, formula = is_kama ~ area + perimetro + compacto + longitud + coeficient.asimetria + longitud.ranura, family = binomial)
summary(modelo)
```

#### PREGUNTA 10 (1pt)

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
precision <- predict(modelo, newdata = df_seeds_test, type = "response")
predicciones_clasificadas <- ifelse(precision > 0.5, "TRUE", "FALSE")
precision <- sum(predicciones_clasificadas == df_seeds_test$is_kama & predicciones_clasificadas == "TRUE") / sum(predicciones_clasificadas == "TRUE")
exhaustividad <- sum(predicciones_clasificadas == "TRUE" & df_seeds_test$is_kama == "TRUE") / sum(df_seeds_test$is_kama == "TRUE")
precision
exhaustividad
```

#### PREGUNTA 11 (1.5pt)

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**: '

Están haciendo un análisis de clustering mediante el algoritmo K-means y después crea una tabla de contingencia para hacer una comparación de los grupos obtenidos con los tipos reales de semillas.

set.seed(123)- esto determina una semilla para la generación de números aleatorios, para que los resultados sean siempre reproducibles

cl\<-df_seeds \|\> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) \|\> kmeans(3) analisis de clúster que utiliza el algorimo k-means con 3 clústeres. Selecciona las variables interesantes del dataframe df_seeds y hace el clustering en base a las variables

table(real=df_seeds$tipo,cluster=cl$cluster), con esto, se crea una tabla de contingencia para mostra la relación entre la variable real (tipo) y los clústeres creados por el algoritmo k-means (cluster). Con esta tabla podemos ver la información sobre cuántas observaciones pertenecen a cada tipo de semilla y a cada clúster.
